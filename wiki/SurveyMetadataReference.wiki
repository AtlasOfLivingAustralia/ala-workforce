#summary Describes the XML structure of a survey question set.

== Introduction ==

Add your content here.


== Question set structure ==

A survey is defined as metadata in XML.  This metadata consists of a set of question definitions and other survey related data. An overview of the syntax of a question set is shown below. More detailed descriptions of metadata elements come after that. Optional elements are surrounds by square brackets.

{{{
<?xml version="1.0" encoding="UTF-8"?>
<questionSet>
  <title>...</title>
  <shortName>...</shortName>
 [<requiredRole>...</requiredRole>]
  <pageSequence>
    ...
  </pageSequence>
 [<knownQuestions>
    ...
  </knownQuestions>]
 [<accounts>
      ...
  </accounts>]
  <question>
    ...
  </question>
  ...
</questionSet>
}}}

==== Title, Short Name ====

The title and shortName text elements define the title and short title of the survey.  For example,

{{{
<title>Survey of Australian Taxonomic Workforce - Personal Survey</title>
<shortName>Personal Survey</shortName>
}}}

==== Required Role ====

The required role element defines the ALA authorisation that a user requires to carry out the survey.  For example the ABRS Institutional survey requires a user to have ROLE_ABRS_INSTITUTION. A when a user logs into the ABRS Survey web application if they have this authorisation then the ABRS Institutional survey is displayed, otherwise the ABRS Personal survey is displayed.

{{{
<requiredRole>ROLE_ABRS_INSTITUTION</requiredRole>
}}}

==== Page Sequence ====

The pageSequence element defines the pagination of a survey.  Each page sub-element defines which questions appear on that page.

{{{
<pageSequence>
  <page>1-2</page>
  <page>3-3</page>
  <page>4-5</page>
  <page>6-6</page>
    ...
</pageSequence>
}}}

==== Known Questions ====

The knownQuestions element defines the question number of particular survey questions that are referenced by the aggregation and charting components of the application.  Currently only the Personal Survey uses these.

{{{
<knownQuestions>
  <employmentStatus>3</employmentStatus>
  <gender>15</gender>
  <ageGroup>16</ageGroup>
</knownQuestions>
}}}

==== Accounts ====

The accounts element is used by the ABRS Institutional survey to link an ALA user id to an institution and also to link an institutional survey to a natural history collection.  The user element identifies the ALA user associated with the institution and the uid element is the ALA Collections identifier.

{{{
<accounts>
  <account>
    <user>survey@dpi.qld.gov.au</user>
    <institution>Queensland Plant Pathology Herbarium</institution>
    <code>BRIP</code>
    <uid>co53</uid>
  </account>
  ...
</accounts>
}}}

==== Question(s) ====

There must be one or more question elements in a question set. Question elements can nested (to a depth of 3 levels).

The question element can have a number of optional attributes to specify the properties of the question.

|| *Attribute* || *Description* ||
|| instruction || Defines instruction text that is displayed with a question ||
|| instructionPosition || Position of instructions. e.g. 'top', default is 'bottom' ||
|| type || Question type - can be 'rank', 'pick', 'range', 'matrix', 'group' or 'none' ||
|| heightHint || ??? not used ||
|| dependentOn || Question can be dependent on the answer to another question - holds the path and the condition. e.g. 'Q5=yes' ||
|| datatype || Data type of the answer - 'bool', 'number', 'text', 'numberRange', 'rank' or 'integer' ||
|| defaultDataType || Data type applied to child questions ||
|| defaultAnswerType || Answer type applied to child questions - 'bool', 'none', 'number', 'text', 'textarea', 'percent', 'rank', 'externalRef', 'radio', 'range', 'preload', 'calculate' or 'summable' ||
|| defaultLayoutHint || Layout hint for child questions - 'align-with-level3', 'subgroup:Label', 'm/n' ||
|| defaultDisplayHint || Form of display for child questions - 'checkbox', 'combobox', 'noColumnHeadings' or 'n' where n = fieldwidth ||

===== Question element =====

{{{
<question>
  <text>...</text>
 [<shortText>...</shortText>]
 [<data>...</data>]
  <answer/> | <question>...</question>
 [<aggregate/>]
</question>
}}}

|| *Element* || *Description* ||
|| text || Question text ||
|| shortText || Optional abbreviated version of question text.  Used in the tabular summary display of a survey's answers ||
|| data || Question data ||
|| answer || ||
|| aggregate || ||

===== Data element =====

The data element describes the question data and the format depends on the question type.

For a Matrix question type, the data element defines the row and column labels.  A matrix question can also define validation rules for values in the matrix.  Validation is defined by validation and validationRange elements. 

{{{
<data>
  <rows>
    <item>Row 1</item>
    <item>Row 2</item>
    <item>Row 3</item>
     ...
  </rows>
  <cols>
    <item>Column 1</item>
    <item>Column 2</item>
    <item>Column 3</item>
     ...
  </cols>
 [<validation>
    <validate>greaterThanOrEqual[1,2]</validate>
    <validate>greaterThanOrEqual[1,3]</validate>
  </validation>
  <validationRange>
    <start>1</start>
    <finish>3</finish>
  </validationRange>]
</data>
}}}

For the Rank question type, the data element defines the number of values in the ranking range and the number of required answers. The values of the rank options are defined in sub-questions.

{{{
<data>
  <max value="int">5</max>
  <maxRequired value="int">5</maxRequired>
</data>
}}}

To align the question text of a question there is the align option.

{{{
<question>
  <text>Please select one:</text>
  <data>
    <align>right</align>
  </data>
    ...
</question>
}}}

===== Answer element =====

The Answer element of a question defines the type and form of a question's answer(s). There are a number of attributes for the answer element. Also there may be a Data sub-element to define the properties of certain answer types.  There may also be a Label sub-element to define the unit label.

|| *Attribute* || *Description* ||
|| dataType || Answer data type - 'bool', 'number', 'text', 'numberRange', 'rank' or 'integer' ||
|| type || Answer type - 'bool', 'none', 'number', 'text', 'textarea', 'percent', 'rank', 'externalRef', 'radio', 'range', 'preload', 'calculate' or 'summable' ||
|| required || Answer must not be blank if required='true' ||
|| requiredIf ||Answer must not be blank if condition is met ||

{{{
<question>
  ...
  <answer dataType="integer" type="percent"/>
</question>
}}}

Example data elements for various answer types are shown below.

====== Textarea ======

{{{
<answer dataType="text" type="textarea">
  <data>
    <rows value="int">3</rows>
  </data>
</answer>
}}}

====== External Reference ======

{{{
<answer type="externalRef">
  <data>state</data>
</answer>
}}}

====== Number ======

{{{
<answer type="number">
  <data>
    <min value="int">0</min>
    <max vaue="int">100</max>
  </data>
  <label>hrs/wk</label>
</answer>
}}}

====== Range ======

{{{
<answer type="range" dataType="numberRange">
  <data>
    <interval value="int">5</interval>
    <start value="int">0</start>
    <end value="int">54</end>
    <over>and over</over>
    <unit>years</unit>
   [<unitPlacement>beforeEach</unitPlacement>]
   [<alt>Prefer not to answer</alt>]
  </data>
</answer>
}}}

====== Radio ======

{{{
<answer type="radio">
  <data>
    <item>Very likely</item>
    <item>Fairly likely</item>
    <item>It may be likely</item>
    <item>Probably not</item>
    <item>Unsure/haven't decided</item>
  </data>
</answer>
}}}

====== Calculate ======

{{{
<answer type="calculate">
  <data>
    <action>updateSum</action>
  </data>
</answer>
}}}

====== Preload ======

{{{
<answer type="preload" required="true">
  <data>
      <domain>Institution</domain>
      <property>name</property>
      <questionSetProperty>setId</questionSetProperty>
      <matchProperty>account</matchProperty>
      <match>username</match>
  </data>
</answer>
}}}

====== Summable ======

{{{
<answer type="summable">
   <data>
      <colRange>
         <start>1</start>
         <finish>4</finish>
      </colRange>
      <rowRange>
        <start>1</start>
        <finish>23</finish>
      </rowRange>
      <sumRow>24</sumRow>
  </data>
</answer>
}}}

===== Aggregate element =====